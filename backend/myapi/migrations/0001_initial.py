# Generated by Django 5.0.2 on 2024-04-23 08:56

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.BooleanField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.BooleanField()),
                ("is_active", models.BooleanField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.SmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Favorites",
            fields=[
                ("routeid", models.IntegerField(db_column="routeID")),
                ("userid", models.IntegerField(db_column="userID")),
                (
                    "id",
                    models.IntegerField(
                        db_column="ID", primary_key=True, serialize=False
                    ),
                ),
            ],
            options={
                "db_table": "Favorites",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Topology",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(unique=True)),
                ("srid", models.IntegerField()),
                ("precision", models.FloatField()),
                ("hasz", models.BooleanField()),
            ],
            options={
                "db_table": "topology",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MyapiActivity",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("strava_id", models.BigIntegerField(unique=True)),
                ("name", models.CharField(max_length=255)),
                ("activity_type", models.CharField(max_length=50)),
                ("start_date", models.DateTimeField()),
                ("duration", models.IntegerField()),
                ("distance", models.FloatField()),
                ("achievement_count", models.IntegerField()),
                ("athlete_count", models.IntegerField()),
                ("average_speed", models.FloatField(blank=True, null=True)),
                ("comment_count", models.IntegerField()),
                ("commute", models.BooleanField()),
                ("elev_high", models.FloatField()),
                ("elev_low", models.FloatField()),
                ("end_latlng", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("flagged", models.BooleanField()),
                ("gear_id", models.CharField(blank=True, max_length=100, null=True)),
                ("has_heartrate", models.BooleanField()),
                ("kudos_count", models.IntegerField()),
                ("manual", models.BooleanField()),
                ("max_speed", models.FloatField()),
                ("moving_time", models.IntegerField()),
                ("photo_count", models.IntegerField()),
                ("private", models.BooleanField()),
                ("start_date_local", models.DateTimeField()),
                (
                    "start_latlng",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("timezone", models.CharField(max_length=100)),
                ("total_elevation_gain", models.FloatField()),
                ("trainer", models.BooleanField()),
                ("visibility", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "myapi_activity",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Routes",
            fields=[
                ("slope", models.FloatField(blank=True, db_column="Slope", null=True)),
                (
                    "surface",
                    models.TextField(blank=True, db_column="Surface", null=True),
                ),
                (
                    "length",
                    models.FloatField(blank=True, db_column="Length", null=True),
                ),
                (
                    "polyline",
                    models.CharField(blank=True, db_column="Polyline", null=True),
                ),
                ("startpoint", models.TextField(db_column="StartPoint")),
                ("endpoint", models.TextField(db_column="EndPoint")),
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, db_column="Name", null=True)),
            ],
            options={
                "db_table": "Routes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SpatialRefSys",
            fields=[
                ("srid", models.IntegerField(primary_key=True, serialize=False)),
                ("auth_name", models.CharField(blank=True, max_length=256, null=True)),
                ("auth_srid", models.IntegerField(blank=True, null=True)),
                ("srtext", models.CharField(blank=True, max_length=2048, null=True)),
                ("proj4text", models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                "db_table": "spatial_ref_sys",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=150, null=True)),
                ("username", models.CharField(blank=True, max_length=100, null=True)),
                ("password", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "users",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("email", models.TextField()),
                ("password", models.TextField()),
            ],
            options={
                "db_table": "User",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Layer",
            fields=[
                (
                    "topology",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="myapi.topology",
                    ),
                ),
                ("layer_id", models.IntegerField()),
                ("schema_name", models.CharField()),
                ("table_name", models.CharField()),
                ("feature_column", models.CharField()),
                ("feature_type", models.IntegerField()),
                ("level", models.IntegerField()),
                ("child_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "layer",
                "managed": False,
            },
        ),
    ]
